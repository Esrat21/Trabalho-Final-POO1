package rpgoneclick;

import com.sun.glass.events.KeyEvent;
import java.awt.Point;

public class Mapa extends javax.swing.JFrame {

    /**
     * Creates new form Mapa
     */
    public Mapa() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);

    }
    boolean moveCima = true;
    boolean moveBaixo = true;
    boolean moveEsquerda = true;
    boolean moveDireita = true;
    public static Player player = new Player(100, 10, 10, 9, 10, 15, 14);
    Monstro monstro = new Monstro(15,100,17);
    Monstro monstro1 = new Monstro(15,100,17);
    
    public void movimentos() {
        Point m = lblMago.getLocation();

        //parede da esquerda
        if (m.x == 0) {
            btnEsquerda.setEnabled(false);
        } else {
            btnEsquerda.setEnabled(true);
        }

        //Parede de Baixo
        if (m.y == 464) {
            btnBaixo.setEnabled(false);
        } else {
            btnBaixo.setEnabled(true);
        }

        // Floresta cima
        if (m.y == 80 && m.x < 320) {
            btnCima.setEnabled(false);
        } else if (m.y > 0) {
            btnCima.setEnabled(true);
        }

        // Floresta Esquerda
        if (m.y < 80 && m.x == 320) {
            btnEsquerda.setEnabled(false);
        } else if (m.x != 16) {
            btnEsquerda.setEnabled(true);
        }

        // Parede de Cima
        if (m.y == 0) {
            btnCima.setEnabled(false);
        } else if (m.y != 80 && m.x >= 322) {
            btnCima.setEnabled(true);
        }

        //Parede Direita / proximo mapa
        if (m.x == 464 && (m.y < 368 || m.y > 384)) {
            btnDireita.setEnabled(false);
        } else {
            btnDireita.setEnabled(true);
            if (m.x == 464 && (m.y == 368 || m.y == 384)) {
                new Mapa2().setVisible(true);
                this.dispose();
            }
        }
        //verifica se o player vai entrar em batalha
        //iniciaBatalha(m);
        if ((m.x > 340 && m.x < 385) && (m.y >= 368 && m.y <= 400)) {
            FightFrame luta = new FightFrame("Slime",player,monstro);
            luta.setVisible(true);
            if (luta.isVisible() == false) {
                lblMago.setLocation(m);
            }
        }
        else if ((m.x > 351 && m.x < 385) && (m.y > 95 && m.y < 129)) {
            FightFrame luta = new FightFrame("Slime",player,monstro1);
            luta.setVisible(true);
            if (luta.isVisible() == false) {
                lblMago.setLocation(m);
            }
        }
    }

    private void desabilitaMovimentos() {
        btnBaixo.setEnabled(false);
        btnCima.setEnabled(false);
        btnEsquerda.setEnabled(false);
        btnDireita.setEnabled(false);
    }

    private void habilitaMovimentos() {
        btnBaixo.setEnabled(true);
        btnCima.setEnabled(true);
        btnEsquerda.setEnabled(true);
        btnDireita.setEnabled(true);
    }

    public void iniciaBatalha(Point m) {
        
        if (((m.x > 351 && m.x < 385) && (m.y > 95 && m.y < 129))) {
            desabilitaMovimentos();
            FightFrame luta = new FightFrame("Slime",player,monstro);
             if (luta.isVisible() == false) {
                habilitaMovimentos();
                 lblMago.setLocation(m);
            }

    }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Slime1 = new javax.swing.JLabel();
        btnDireita = new javax.swing.JButton();
        btnCima = new javax.swing.JButton();
        btnEsquerda = new javax.swing.JButton();
        btnBaixo = new javax.swing.JButton();
        lblMago = new javax.swing.JLabel();
        lblSlime0 = new javax.swing.JLabel();
        mapaInicial = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Slime1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rpgoneclick/Imagens/Slime1 usar.png"))); // NOI18N
        getContentPane().add(Slime1, new org.netbeans.lib.awtextra.AbsoluteConstraints(368, 384, -1, -1));

        btnDireita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDireitaActionPerformed(evt);
            }
        });
        btnDireita.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnDireitaKeyPressed(evt);
            }
        });
        getContentPane().add(btnDireita, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 450, 30, 10));

        btnCima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCimaActionPerformed(evt);
            }
        });
        btnCima.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCimaKeyPressed(evt);
            }
        });
        getContentPane().add(btnCima, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 420, -1, -1));

        btnEsquerda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEsquerdaActionPerformed(evt);
            }
        });
        btnEsquerda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnEsquerdaKeyPressed(evt);
            }
        });
        getContentPane().add(btnEsquerda, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 450, 30, -1));

        btnBaixo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaixoActionPerformed(evt);
            }
        });
        btnBaixo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBaixoKeyPressed(evt);
            }
        });
        getContentPane().add(btnBaixo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 450, -1, -1));

        lblMago.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rpgoneclick/Imagens/MaguinhoUsarESSE.png"))); // NOI18N
        lblMago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lblMagoKeyPressed(evt);
            }
        });
        getContentPane().add(lblMago, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 400, -1, -1));

        lblSlime0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rpgoneclick/Imagens/Slime1 usar.png"))); // NOI18N
        getContentPane().add(lblSlime0, new org.netbeans.lib.awtextra.AbsoluteConstraints(368, 112, -1, -1));

        mapaInicial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rpgoneclick/Imagens/0,0.png"))); // NOI18N
        mapaInicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mapaInicialKeyPressed(evt);
            }
        });
        getContentPane().add(mapaInicial, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mapaInicialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mapaInicialKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_mapaInicialKeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void lblMagoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblMagoKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_lblMagoKeyPressed

    private void btnBaixoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBaixoKeyPressed
        //move personagem para esquerda
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.x = m.x - 16;
            lblMago.setLocation(m);
            movimentos();
        }
        //move o personagem para cima
        else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.y = m.y - 16;
            lblMago.setLocation(m);
            movimentos();
        }
        //move personagem para baixo
        else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.y = m.y + 16;
            lblMago.setLocation(m);
            movimentos();
        }
        //move personagem para direita
        else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.x = m.x + 16;
            lblMago.setLocation(m);
            movimentos();
        }
    }//GEN-LAST:event_btnBaixoKeyPressed

    private void btnBaixoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaixoActionPerformed
        // TODO add your handling code here:

        Point m = lblMago.getLocation();

        System.out.println(lblMago.getLocation());
        m.y = m.y + 16;
        lblMago.setLocation(m);
        movimentos();
    }//GEN-LAST:event_btnBaixoActionPerformed

    private void btnEsquerdaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnEsquerdaKeyPressed
        //move personagem para esquerda
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.x = m.x - 16;
            lblMago.setLocation(m);
            movimentos();
        }
        //move o personagem para cima
        else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.y = m.y - 16;
            lblMago.setLocation(m);
            movimentos();
        }
        //move personagem para baixo
        else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.y = m.y + 16;
            lblMago.setLocation(m);
            movimentos();
        }
        //move personagem para direita
        else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.x = m.x + 16;
            lblMago.setLocation(m);
            movimentos();
        }
    }//GEN-LAST:event_btnEsquerdaKeyPressed

    private void btnEsquerdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEsquerdaActionPerformed
        // TODO add your handling code here:
        Point m = lblMago.getLocation();
        System.out.println(lblMago.getLocation());
        m.x = m.x + 16;
        lblMago.setLocation(m);
        movimentos();
    }//GEN-LAST:event_btnEsquerdaActionPerformed

    private void btnCimaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCimaKeyPressed
        //move personagem para esquerda
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.x = m.x - 16;
            lblMago.setLocation(m);
            movimentos();
        }
        //move o personagem para cima
        else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.y = m.y - 16;
            lblMago.setLocation(m);
            movimentos();
        }
        //move personagem para baixo
        else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.y = m.y + 16;
            lblMago.setLocation(m);
            movimentos();
        }
        //move personagem para direita
        else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.x = m.x + 16;
            lblMago.setLocation(m);
            movimentos();
        }
    }//GEN-LAST:event_btnCimaKeyPressed

    private void btnCimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCimaActionPerformed
        // TODO add your handling code here:
        Point m = lblMago.getLocation();
        System.out.println(lblMago.getLocation());
        m.y = m.y - 16;
        lblMago.setLocation(m);
        movimentos();
    }//GEN-LAST:event_btnCimaActionPerformed

    private void btnDireitaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnDireitaKeyPressed
        //move personagem para esquerda
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.x = m.x - 16;
            lblMago.setLocation(m);
            movimentos();
        }
        //move o personagem para cima
        else if (evt.getKeyCode() == KeyEvent.VK_UP) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.y = m.y - 16;
            lblMago.setLocation(m);
            movimentos();
        }
        //move personagem para baixo
        else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.y = m.y + 16;
            lblMago.setLocation(m);
            movimentos();
        }
        //move personagem para direita
        else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            Point m = lblMago.getLocation();
            System.out.println(lblMago.getLocation());
            m.x = m.x + 16;
            lblMago.setLocation(m);
            movimentos();
        }
    }//GEN-LAST:event_btnDireitaKeyPressed

    private void btnDireitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDireitaActionPerformed
        // TODO add your handling code here:
        Point m = lblMago.getLocation();
        System.out.println(lblMago.getLocation());
        m.x = m.x + 16;
        lblMago.setLocation(m);
        movimentos();
    }//GEN-LAST:event_btnDireitaActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Mapa().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Slime1;
    private javax.swing.JButton btnBaixo;
    private javax.swing.JButton btnCima;
    private javax.swing.JButton btnDireita;
    private javax.swing.JButton btnEsquerda;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel lblMago;
    private javax.swing.JLabel lblSlime0;
    private javax.swing.JLabel mapaInicial;
    // End of variables declaration//GEN-END:variables
}
